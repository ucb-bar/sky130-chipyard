#!/usr/bin/env python3
#
# NOTE: the custom hooks are only used for sky130.

import os

from hammer.vlsi import CLIDriver, HammerTool, HammerToolHookAction

from typing import Dict, Callable, Optional, List

from hammer.technology.sky130 import SKY130Tech

def add_fillers(x: HammerTool) -> bool:
    if x.get_setting("vlsi.core.technology") == "hammer.technology.sky130" and \
       x.get_setting("vlsi.core.par_tool")   == "hammer.par.innovus" :
        x.add_fillers()  # call Innovus's add_fillers step
    return True

class ExampleDriver(CLIDriver):
    def get_extra_par_hooks(self) -> List[HammerToolHookAction]:
        extra_hooks = [
            # No bumps to place in SKY130.
            HammerTool.make_removal_hook("place_bumps"),

            # Move fillers step to after opt_design to avoid LVS errors.
            HammerTool.make_removal_hook("add_fillers"),
            HammerTool.make_post_insertion_hook("opt_design", add_fillers),
        ]
        return extra_hooks

if __name__ == '__main__':
    ExampleDriver().main()
